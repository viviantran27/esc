component R1_table
% R1_table
% Models a resistor where the resistance value (R) depends on an external
% physical signal inputs SOC and T.

% Copyright 2012-2017 The MathWorks, Inc.
    
    nodes
        p = foundation.electrical.electrical; % +:left
        n = foundation.electrical.electrical; % -:right
    end

    inputs
        T = {293.15,'K'};  %T:left
        SOC = {1,'1'}; %SOC:left
    end
    
    outputs
        pow = {0,'W'}; % POW:right
    end
    
    parameters
        R_Table = {1e-3*ones(5,3),'Ohm'};   % Matrix of resistance values, R(SOC,T)
        SOC_Table = {[0;0.1;0.5;0.9;1],'1'} % State of charge (SOC) breakpoints
        Temp_Table = {[273.15 293.15 313.15],'K'} % Temperature (T) breakpoints
    end
    
    variables(Access=private)
        i = { 0, 'A' }; % Current
        v = { 0, 'V' }; % Voltage
    end
    
    branches
        i : p.i -> n.i;
    end
    
    equations
        assert(all(R_Table(:) > 0))
        assert(all(SOC_Table(:) >= 0))
        assert(all(Temp_Table(:) >= 0))
        v == p.v - n.v;
        let
            % Perform the table lookup
            R1 = tablelookup(SOC_Table,Temp_Table,R_Table,SOC,T,...
                interpolation=linear,extrapolation=nearest)
%             Tref = {651,'K'};
%             R1 = R*exp(Tref/T)*1.04e-2
%             
% %             R_min = {0.0001,'Ohm'}
% %             if R1 < R_min
% %                 R1 = R_min
% %             end
            
        in
            % Electrical Equations
            if R1 < {0.0001,'Ohm'}
                v == i*{0.0001,'Ohm'};
                pow == v*i;
            else
                v == i*R1;
                pow == v*i;
            end
        end
    end
    
end
